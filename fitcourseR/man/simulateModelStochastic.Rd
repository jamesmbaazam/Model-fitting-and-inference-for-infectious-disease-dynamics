% Generated by roxygen2 (4.0.1): do not edit by hand
\name{simulateModelStochastic}
\alias{simulateModelStochastic}
\title{Simulate forward a stochastic model}
\usage{
simulateModelStochastic(theta, state.init, times, transitions, rateFunc)
}
\arguments{
\item{theta}{named vector of model parameters.}

\item{state.init}{named vector of initial state of the model.}

\item{times}{time sequence for which state of the model is wanted; the first value of times must be the initial time.}

\item{transitions}{
    One of two possible data types:
    \itemize{
      \item A list with length equal to the number of transitions.  Each
      element of the list should be a vector specifying a transition
      (i.e., which state(s) change and by how much).  Each entry in the
      vector needs a name (specifying which state variable to change,
      either by name or index) and a value (specifying the amount by
      which this variable will change).
      \item A two-dimensional matrix of integers specifying how each state
      variable (rows) should be changed for a given transition (columns).
      Generally this will be a sparse matrix of primarily 1s and -1s,
      which can make this structure inefficient.
    }
    See the example below for details as well as
    \code{\link{ssa.maketrans}} or the vignette accompanying this package.
  }

\item{rateFunc}{
    R function that returns instantaneous transition rates for each
    transition in the form a real-valued one-dimensional vector with
    length equal to the number of transitions.  Must accept the
    following arguments:
    \itemize{
      \item vector of current values for all state variables
      \item parameters as supplied in argument to ssa.adaptivetau
      \item single real number giving the current time (all simulations
      start at t=0)
    }
  }
}
\value{
a data.frame of dimension \code{length(times)x(length(state.init)+1)} with column names equal to \code{c("time",names(state.init))}.
}
\description{
This function uses the function \code{\link[adaptivetau]{ssa.adaptivetau}} to simulate the model and returns the trajectories in a valid format for the class \code{\link{fitmodel}}.
}

