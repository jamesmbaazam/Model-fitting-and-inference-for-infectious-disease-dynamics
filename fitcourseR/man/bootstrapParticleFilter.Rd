% Generated by roxygen2 (4.0.1): do not edit by hand
\name{bootstrapParticleFilter}
\alias{bootstrapParticleFilter}
\title{Bootstrap Particle Filter for fitmodel object}
\usage{
bootstrapParticleFilter(fitmodel, n.particles, progress = FALSE,
  n.cores = 1)
}
\arguments{
\item{n.particles}{number of particles}

\item{progress}{if \code{TRUE} progression of the filter is displayed in the console.}

\item{n.cores}{number of cores on which propogation of the particles is parallelised. By default no parallelisation (\code{n.cores=1}). If \code{NULL}, set to the value returned by \code{\link[parallel]{detectCores}}.}

\item{fitmodel}{\code{\link{fitmodel}} object.}
}
\value{
A list of 3 elements:
\itemize{
\item \code{log.likelihood} the marginal log-likelihood of the theta.
\item \code{traj} a list of size \code{n.particles} with all filtered trajectories.
\item \code{traj.weight} a vector of size \code{n.particles} with the normalised weight of the filtered trajectories.
}
}
\description{
The bootstrap particle filter returns an estimate of the marginal log-likelihood \eqn{L = p(y(t_{1:T})|\theta)}
as well as the set of filtered trajectories and their respective weights at the last observation time \eqn{\omega(t_T)=p(y(t_T)|\theta)}.
}
\note{
An unbiased state sample \eqn{x(t_{0:T}) ~ p(X(t_{0:T})|\theta,y(t_{0:T}))} can be obtained by sampling the set of trajectories \code{traj} with probability \code{traj.weight}.
}
\seealso{
plotSMC
}

